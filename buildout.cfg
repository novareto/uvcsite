[buildout]
eggs-directory = eggs
develop = 
    . 


parts = 
    app 
    test 
    data 
    log 
    omelette 
    profile_ini
    zope_conf 
    site_zcml 
    rungrok 
    deploy_ini 
    checkversions 
    console_scripts
    interactive_debugger
    coverage
    test-coverage
    code-analysis

find-links =
    http://dev.bg-kooperation.de/pypi/simple 
    http://pypi.dolmen-project.org/pypi
    http://pypi.dolmen-project.org/find-links

extends = 
    versions.cfg

eggs-directory = eggs

versions = versions
show-picked-versions = true

extensions = 
    mr.developer

sources-dir = src
sources = sources

auto-checkout = 
#    grokui.admin 
#    uvc.staticcontent
#    uvc.tbskin
#    uvc.token_auth

[omelette]
recipe = collective.recipe.omelette
eggs = ${app:eggs}


[app]
recipe = zc.recipe.egg
eggs = uvcsite [test]
#       uvc.token_auth
#       z3c.evalexception>=2.0
       waitress
       Paste
       PasteScript
       PasteDeploy
       pdbpp
      
interpreter = python-console

[data]
recipe = zc.recipe.filestorage

[log]
recipe = zc.recipe.filestorage

[test]
recipe = zc.recipe.testrunner
eggs = 
    uvcsite
    uvcsite[test]
defaults = ['--tests-pattern', '^f?tests$', '-v', '--auto-color', '--auto-progress']
[test]
initialization =
  import os
  os.environ['GROK_DISABLE_TEMPLATE_WARNING'] = 'yes'

[i18nenv] 
zope_i18n_allowed_languages=de,de-de

[zope_conf]
recipe = collective.recipe.template
input = etc/zope.conf.in
output = ${buildout:parts-directory}/etc/zope.conf
filestorage = ${buildout:directory}/var/filestorage
blobstorage = ${buildout:directory}/var/blobstorage
logfiles = ${buildout:directory}/var/log
extra =

[site_zcml]
recipe = collective.recipe.template
input = etc/site.zcml.in
output = ${buildout:parts-directory}/etc/site.zcml

[rungrok]
recipe = collective.recipe.scriptgen
cmd = ${buildout:bin-directory}/paster
arguments = serve ${buildout:parts-directory}/etc/deploy.ini


[deploy_ini]
recipe = collective.recipe.template
input = etc/deploy.ini.in
output = ${buildout:parts-directory}/etc/deploy.ini
host = 0.0.0.0 
port = 8080 

[profile_ini]
recipe = collective.recipe.template
input = etc/profile.ini.in
output = ${buildout:parts-directory}/etc/profile.ini
host = 127.0.0.1
port = 8080 


[checkversions]
# script to find newer versions
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[console_scripts]
recipe = zc.recipe.egg
eggs = createzopecoverage

[interactive_debugger]
recipe = zc.recipe.egg
eggs = uvcsite 
entry-points =
  interactive_debugger=grokcore.startup.startup:interactive_debug_prompt
arguments = zope_conf="${zope_conf:output}"

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/uvcsite bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 90%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-max-complexity = 50
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg,skins
flake8-extensions =
pre-commit-hook = False

[versions]
uvcsite = 
